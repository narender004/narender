{"ast":null,"code":"import _classCallCheck from \"C:\\\\narender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\narender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\narender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\narender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\narender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\narender\\\\src\\\\components\\\\Payment\\\\Payment.js\";\nimport React from 'react';\nimport './Payment.css';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport * as loginService from '../../services/loginService';\nimport PaymentModel from '../../Model/paymentModel';\nimport { NotificationContainer, NotificationManager } from 'react-notifications'; // import { concatAll } from 'rxjs-compat/operator/concatAll';\n// import { Observable } from 'rxjs/Rx';\n\nvar Payment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Payment, _React$Component);\n\n  function Payment(props) {\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payment).call(this, props));\n    _this.state = {\n      loader_value: new PaymentModel()\n    };\n    return _this;\n  }\n\n  _createClass(Payment, [{\n    key: \"submit\",\n    value: function submit() {\n      var _this2 = this;\n\n      this.state.loader_value.errormsg = '';\n      this.props.setLoader(true);\n      var get_token = localStorage.getItem('token');\n\n      if (this.props.stripe) {\n        this.props.stripe.createToken().then(function (payload) {\n          if (payload.error) {\n            NotificationManager.error(payload.error.message);\n\n            _this2.props.setLoader(false, null);\n\n            return;\n          }\n\n          loginService.getPayment({\n            id: payload.token.id,\n            token: get_token\n          }).then(function (res) {\n            _this2.props.setLoader(false, null);\n\n            _this2.props.history.push('/success');\n\n            _this2.setState({\n              showPopup: true\n            });\n          }).catch(function (error) {\n            // this.state.loader_value.errormsg = error.response.data.error;            \n            //       this.setState({loader_value: this.state.loader_value});\n            // this.setState({ error: error });\n            _this2.props.setLoader(false, error.response.data.error);\n\n            NotificationManager.error(error.response.data.error);\n          });\n        });\n      } else {\n        console.log(\"Stripe.js hasn't loaded yet.\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// <div>\n        //     <form  className=\"checkout form-group\">\n        //           <p>Would you like to complete the purchase?</p>\n        //     <CardElement />\n        //     <button className=\"submit my-3\" onClick={this.submit.bind(this)} >Pay</button>\n        //   </form>\n        //     <NotificationContainer/>\n        //     </div>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkout form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Would you like to complete the purchase?\"), React.createElement(CardElement, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"submit my-3\",\n          onClick: this.submit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Pay\")), React.createElement(NotificationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return Payment;\n}(React.Component);\n\nexport default injectStripe(Payment);","map":{"version":3,"sources":["C:\\narender\\src\\components\\Payment\\Payment.js"],"names":["React","CardElement","injectStripe","loginService","PaymentModel","NotificationContainer","NotificationManager","Payment","props","state","loader_value","errormsg","setLoader","get_token","localStorage","getItem","stripe","createToken","then","payload","error","message","getPayment","id","token","res","history","push","setState","showPopup","catch","response","data","console","log","submit","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,uBAA1C;AACA,OAAO,KAAKC,YAAZ,MAA8B,6BAA9B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,qBAA3D,C,CAEA;AAEA;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,IAAIN,YAAJ;AADH,KAAb;AAFiB;AAOlB;;;;6BAKQ;AAAA;;AACP,WAAKK,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,GAAmC,EAAnC;AACA,WAAKH,KAAL,CAAWI,SAAX,CAAqB,IAArB;AACA,UAAIC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhB;;AACA,UAAI,KAAKP,KAAL,CAAWQ,MAAf,EAAuB;AACrB,aAAKR,KAAL,CAAWQ,MAAX,CAAkBC,WAAlB,GACGC,IADH,CACQ,UAACC,OAAD,EAAa;AACjB,cAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjBd,YAAAA,mBAAmB,CAACc,KAApB,CAA0BD,OAAO,CAACC,KAAR,CAAcC,OAAxC;;AACA,YAAA,MAAI,CAACb,KAAL,CAAWI,SAAX,CAAqB,KAArB,EAA4B,IAA5B;;AACA;AACD;;AAEDT,UAAAA,YAAY,CAACmB,UAAb,CAAwB;AAAEC,YAAAA,EAAE,EAAEJ,OAAO,CAACK,KAAR,CAAcD,EAApB;AAAwBC,YAAAA,KAAK,EAAEX;AAA/B,WAAxB,EAAoEK,IAApE,CAAyE,UAACO,GAAD,EAAS;AAChF,YAAA,MAAI,CAACjB,KAAL,CAAWI,SAAX,CAAqB,KAArB,EAA4B,IAA5B;;AACA,YAAA,MAAI,CAACJ,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;;AACA,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAd;AAED,WALD,EAKGC,KALH,CAKS,UAACV,KAAD,EAAW;AAClB;AACA;AACA;AACA,YAAA,MAAI,CAACZ,KAAL,CAAWI,SAAX,CAAqB,KAArB,EAA4BQ,KAAK,CAACW,QAAN,CAAeC,IAAf,CAAoBZ,KAAhD;;AACAd,YAAAA,mBAAmB,CAACc,KAApB,CAA0BA,KAAK,CAACW,QAAN,CAAeC,IAAf,CAAoBZ,KAA9C;AACD,WAXD;AAYD,SApBH;AAuBD,OAxBD,MAwBO;AACLa,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AAEF;;;6BAIQ;AACP,aAIE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAFF,EAQE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF;AAdF;AAyBD;;;;EA3EmBpC,KAAK,CAACqC,S;;AA6E5B,eAAenC,YAAY,CAACK,OAAD,CAA3B","sourcesContent":["import React from 'react';\nimport './Payment.css';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport * as loginService from '../../services/loginService';\nimport PaymentModel from '../../Model/paymentModel';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\n// import { concatAll } from 'rxjs-compat/operator/concatAll';\n\n// import { Observable } from 'rxjs/Rx';\n\nclass Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader_value: new PaymentModel(),\n\n    }\n\n  }\n\n\n\n\n  submit() {\n    this.state.loader_value.errormsg = ''\n    this.props.setLoader(true);\n    var get_token = localStorage.getItem('token')\n    if (this.props.stripe) {\n      this.props.stripe.createToken()\n        .then((payload) => {\n          if (payload.error) {\n            NotificationManager.error(payload.error.message);\n            this.props.setLoader(false, null);\n            return;\n          }\n          \n          loginService.getPayment({ id: payload.token.id, token: get_token }).then((res) => {\n            this.props.setLoader(false, null);\n            this.props.history.push('/success')\n            this.setState({ showPopup: true })\n\n          }).catch((error) => {\n            // this.state.loader_value.errormsg = error.response.data.error;            \n            //       this.setState({loader_value: this.state.loader_value});\n            // this.setState({ error: error });\n            this.props.setLoader(false, error.response.data.error);\n            NotificationManager.error(error.response.data.error);\n          })\n        }\n\n        )\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\");\n    }\n\n  }\n\n\n\n  render() {\n    return (\n\n\n\n      // <div>\n      //     <form  className=\"checkout form-group\">\n      //           <p>Would you like to complete the purchase?</p>\n      //     <CardElement />\n      //     <button className=\"submit my-3\" onClick={this.submit.bind(this)} >Pay</button>\n\n      //   </form>\n      //     <NotificationContainer/>\n      //     </div>\n\n      <div>\n        \n        <div className=\"checkout form-group\">\n          <p>Would you like to complete the purchase?</p>\n          <CardElement />\n          <button className=\"submit my-3\" onClick={this.submit.bind(this)}>Pay</button>\n\n        </div>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\nexport default injectStripe(Payment);"]},"metadata":{},"sourceType":"module"}